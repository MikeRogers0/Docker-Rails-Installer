---
# Docker Compose 2.4 is for local development
# https://www.heroku.com/podcasts/codeish/57-discussing-docker-containers-and-kubernetes-with-a-docker-captain - Source on that.
version: '2.4'

x-app: &app
  image: rails-app:latest
  mem_limit: 512m
  build:
    context: .
    dockerfile: Dockerfile
    target: development
  env_file:
    - .env
  command: >
    bash -c "bundle check || bundle install &&
    yarn install --check-files"
  environment:
    RAILS_LOG_TO_STDOUT: enabled
    REDIS_URL: redis://@redis:6379/1
    DATABASE_URL: postgres://postgres:postgres@postgres:5432/
    WEBPACKER_DEV_SERVER_HOST: webpacker
    BOOTSNAP_CACHE_DIR: /usr/src/bootsnap
  volumes:
    - .:/usr/src/app:cached
    - ~/.docker-data/ruby/2.7.1/bundler:/usr/local/bundle:delegated
    - bootsnap_cache:/usr/src/bootsnap:delegated
    - rails_cache:/usr/src/app/tmp/cache:delegated
    - packs:/usr/src/app/public/packs:delegated
  depends_on:
    postgres:
      condition: service_healthy
    redis:
      condition: service_started

services:
  postgres:
    image: postgres:11.7-alpine
    mem_limit: 64m
    volumes:
      - ~/.docker-data/rails-app/postgresql:/var/lib/postgresql/data:delegated
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    restart: on-failure
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: none

  redis:
    image: redis:4.0.14-alpine
    mem_limit: 64m
    command: >
      --save
      --maxmemory 128mb
      --maxmemory-policy noeviction
      --stop-writes-on-bgsave-error yes
      --rdbcompression yes
      --rdbchecksum yes
      --dir /data
    volumes:
      - ~/.docker-data/rails-app/redis:/data:delegated
    ports:
      - 6379
    restart: on-failure
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: none

  web:
    <<: *app
    command: bash -c "rm -rf /usr/src/app/tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    ports:
      - "3000:3000"

  worker:
    <<: *app
    command: bundle exec sidekiq -C config/sidekiq.yml

  webpacker:
    <<: *app
    mem_limit: 128m
    command: ./bin/webpack-dev-server
    environment:
      WEBPACKER_DEV_SERVER_HOST: 0.0.0.0
    ports:
      - '3035:3035'

volumes:
  bootsnap_cache:
  rails_cache:
  packs:
